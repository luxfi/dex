name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run tests
        run: |
          go test -v -short ./pkg/lx/... ./pkg/mlx/... ./test/unit/...

      - name: Build binaries
        run: |
          mkdir -p dist
          
          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/lx-dex-linux-amd64 ./cmd/demo
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/lx-dex-linux-arm64 ./cmd/demo
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/lx-dex-darwin-amd64 ./cmd/demo
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/lx-dex-darwin-arm64 ./cmd/demo
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/lx-dex-windows-amd64.exe ./cmd/demo
          
          # Build server binaries
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/dex-server-linux-amd64 ./cmd/dex-server
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/dex-server-darwin-arm64 ./cmd/dex-server
          
          # Create checksums
          cd dist && sha256sum * > checksums.txt

      - name: Create Release Notes
        id: release_notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          cat << EOF > release-notes.md
          # LX DEX $VERSION
          
          ## Features
          - **Ultra-high performance**: 100M+ trades/sec capability
          - **Sub-microsecond latency**: <1μs order matching
          - **Multi-engine architecture**: Pure Go, C++, and GPU (MLX)
          - **Quantum-resistant consensus**: FPC with Ringtail+BLS signatures
          
          ## Binaries
          
          ### Demo Application
          - \`lx-dex-linux-amd64\` - Linux x86_64
          - \`lx-dex-linux-arm64\` - Linux ARM64
          - \`lx-dex-darwin-amd64\` - macOS Intel
          - \`lx-dex-darwin-arm64\` - macOS Apple Silicon
          - \`lx-dex-windows-amd64.exe\` - Windows x86_64
          
          ### DEX Server
          - \`dex-server-linux-amd64\` - Linux server
          - \`dex-server-darwin-arm64\` - macOS server
          
          ## Installation
          
          \`\`\`bash
          # Download for your platform
          curl -L https://github.com/luxfi/dex/releases/download/$VERSION/lx-dex-\$(uname -s | tr '[:upper:]' '[:lower:]')-\$(uname -m) -o lx-dex
          chmod +x lx-dex
          ./lx-dex
          \`\`\`
          
          ## Performance
          - Order matching: ~1μs latency
          - Throughput: 100M+ trades/sec (with GPU)
          - Consensus: 50ms finality
          
          ## Checksums
          See \`checksums.txt\` for SHA256 hashes of all binaries.
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: LX DEX ${{ steps.release_notes.outputs.VERSION }}
          body_path: release-notes.md
          draft: false
          prerelease: false
          files: |
            dist/*

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: luxfi/dex
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max